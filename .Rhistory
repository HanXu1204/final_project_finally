x1 <- c(7,4,16,3,21,8)
x2 <-c(30,41,7,49,5,31)
y <- c(44,33,75,28,91,55)
six1 <- rep(1,6)
X <- matrix(c(six1,x1,x2),ncol=3,byrow=F)
View(X)
Y <- matrix(y,ncol=1)
beta.hat <- inverse(solve(X)%*%x)%*%(solve(X)%*%Y)
beta.hat <- solve(t(X)%*%x)%*%(t(X)%*%Y)
beta.hat <- solve(t(X)%*%X)%*%(t(X)%*%Y)
View(beta.hat)
resid.e <- solve(Y-X%*%beta.hat)%*%(Y-X%*%beta.hat)
resid.e <- t(Y-X%*%beta.hat)%*%(Y-X%*%beta.hat)
View(resid.e)
View(resid.e)
View(resid.e)
View(resid.e)
View(resid.e)
resid.e <- (Y-X%*%beta.hat)
y.hat <- X%*%solve(t(X)%*%X)%*%t(X)
View(y.hat)
y.mean <- mean(Y)
SSY <- t(Y-y.mean)%*%(Y-y.mean)
SSE <- t(Y-X%*%beta.hat)%*%(Y-X%*%beta.hat)
SSR <- SSY-SSE
View(SSR)
corr(y.hat)
var(y.hat)
var(bata.hat)
var(beta.hat)
cor(beta.hat)
beta.hat
n <- nrow(Y)
MSE <-SSE/(n-3)
var.betahat <- MSE * solve(t(X)%*%X)
COV.betahat <- MSE %*% solve(t(X)%*%X)
n
MSE
MSE <- as.numeric(MSE)
COV.betahat <- MSE %*% solve(t(X)%*%X)
MSE
COV.betahat <- MSE * solve(t(X)%*%X)
COV.betahat
data.fra <- dataframe(x1 = 10,x2=30)
data.fra <- data.frame(x1 = 10,x2=30)
y.reg <- lm(y ~ x1+x2)
predic(y.reg, data=data.fra)
predict(y.reg, data=data.fra)
predict(y.reg, newdata=data.fra)
MSE * y.hat
url <- "https://dataverse.harvard.edu/api/access/datafile/6458073"
data <- read.c sv(url, header=TRUE)
url <- "https://dataverse.harvard.edu/api/access/datafile/6458073"
data <- read.csv(url, header=TRUE)
url <- "C:\Users\Jingjing Hsu\Downloads"
url <- "C:\Users\Jingjing Hsu\Downloads\brain_stroke.csv"
data <- read.csv("C:\Users\Jingjing Hsu\Downloads\brain_stroke.csv", header=TRUE)
127/129
131/(0.5090/0.5032)
131*(0.5090/0.5032)
0.0226^2/((0.5032*log(0.5032))^2)
log(-log(0.5032))
round(-0.469599,3)
round(-0.469599,4)
setwd("D:/INFO_550/docker_files/my_first_docker_image")
setwd("D:/INFO_550/final_project_diamond_prize")
setwd("D:/INFO_550/final_project_diamond_prize")
renv::init()
renv::init()
here::i_am("code/00_clean_data.R")
absolute_path_to_data <- here::here("data", "Diamonds_Prices2022.csv")
data <- read.csv(absolute_path_to_data, header = TRUE)
library(labelled)
library(gtsummary)
var_label(data) <- list(
X = "Number",
carat = "Diamond Sizes",
cut = "Diamond Quality",
color = "Diamond Color",
clarity = "Diamond Clarity",
depth = "Diamond Depth",
table = "Size of Table Facet ",
price = "Price",
x = "Length (mm)",
y = "Width (mm)",
z = "Depth (mm)"
)
data$price_cat <- ifelse(data$price < 2401, "Cheap", "Expensive")
saveRDS(
data,
file = here::here("output/data_clean.rds")
)
here::i_am("code/01_make_table1.R")
data <- readRDS(
file = here::here("output/data_clean.rds")
)
library(gtsummary)
table_one <- data |>
select("cut", "table", "carat", "price_cat") |>
tbl_summary(by = price_cat) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**Price of The Diamond**") |>
add_overall() |>
add_p()
saveRDS(
table_one,
file = here::here("output/table_one.rds")
)
here::i_am("code/02_make_scatter.R")
data <- readRDS(
file = here::here("output/data_clean.rds")
)
library(ggplot2)
scatterplot <-  ggplot(data, aes(x = carat, y = price)) +
geom_point() +
geom_smooth(method = lm) +
theme_bw()
ggsave(
here::here("output/scatterplot.png"),
plot = scatterplot,
device = "png"
)
here::i_am("code/03_models.R")
data <- readRDS(
file = here::here("output/data_clean.rds")
)
library(gtsummary)
mod <- glm(
price ~ cut + carat + table,
data = data
)
primary_regression_table <-
tbl_regression(mod) |>
add_global_p()
here::i_am("code/03_models.R")
data <- readRDS(
file = here::here("output/data_clean.rds")
)
library(gtsummary)
mod <- glm(
price ~ cut + carat + table,
data = data
)
primary_regression_table <-
tbl_regression(mod) |>
add_global_p()
binary_mod <- glm(
I(price > 2401) ~ cut + color + clarity,
data = data,
family = binomial()
)
secondary_regression_table <-
tbl_regression(binary_mod, exponentiate = TRUE) |>
add_global_p()
both_models <- list(
primary = mod,
secondary = binary_mod
)
saveRDS(
both_models,
file = here::here("output/both_models.rds")
)
both_regression_tables <- list(
primary = primary_regression_table,
secondary = secondary_regression_table
)
saveRDS(
both_regression_tables,
file = here::here("output/both_regression_tables.rds")
)
here::i_am("code/04_render_report.R")
library(rmarkdown)
# rendering a report in production mode
render("report_diamond_prize.Rmd")
